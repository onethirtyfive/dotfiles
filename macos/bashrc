export GIT_PROMPT_FETCH_REMOTE_STATUS=0

if [ -n "$IN_NIX_SHELL" ]; then
  echo "In nix shell."
fi

export EDITOR=vim

# General usefulness:
alias is="env | grep -i NIX_SHELL"
alias gs="git status"
alias vim="onethirtyfive-vim -geometry 500x500"
alias pvim="onethirtyfive-vim"
alias rmswp="find . -name *.swp | xargs rm"
alias editvscode="vim ~/Code/dotfiles/common/nix/custom/vscode.nix"

# Ruby:
alias be="bundle exec"
alias bert="bundle exec rake"

if [ -f "$HOME/.bash-git-prompt/gitprompt.sh" ]; then
    GIT_PROMPT_ONLY_IN_REPO=0
    source $HOME/.bash-git-prompt/gitprompt.sh
fi

# PROMPT_COMMAND='__git_ps1 "\u@\h:\w" "\\\$ "'
# GIT_PS1_SHOWSTASHSTATE='true'
# GIT_PS1_SHOWCOLORHINTS='true'

# disable freeze on ctrl-s
stty -ixon

# set key repeat rates correctly

function dc {
  source "$(pwd)/script/init"
  "$(pwd)/script/load-civiqs-mappings"
  docker-compose run --rm base $@
}

function dcs {
  source "$(pwd)/script/init"
  "$(pwd)/script/load-civiqs-mappings"
  D_APP_ENV=test docker-compose run --rm base bundle exec rspec --color --backtrace $@
}

function dcns {
  source "$(pwd)/script/init"
  "$(pwd)/script/load-civiqs-mappings"
  D_APP_ENV=test docker-compose run --rm base bundle exec rspec --order defined --color --backtrace $@
}

function dcss {
  source "$(pwd)/script/init"
  "$(pwd)/script/load-civiqs-mappings"
  D_APP_ENV=test docker-compose run --rm base bundle exec rspec --seed $1 --color --backtrace ${@:2}
}

fix-devenv() {
  defaults write com.apple.dock orientation right
  defaults write NSGlobalDomain AppleShowScrollBars Always # untested
  defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false
  defaults write NSGlobalDomain NSAutomaticTextCompletionEnabled -bool false
  defaults write com.apple.messageshelper.MessageController SOInputLineSettings -dict-add "automaticEmojiSubstitutionEnablediMessage" -bool false
}

fix-keys() {
  defaults write NSGlobalDomain KeyRepeat -int 1
  defaults write NSGlobalDomain InitialKeyRepeat -int 17
  defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false
  defaults write com.apple.Accessibility KeyRepeatDelay 0.5
  defaults write com.apple.Accessibility KeyRepeatEnabled -int 1
  defaults write com.apple.Accessibility KeyRepeatInterval 0.083333333
}

# put this either in bashrc or zshrc
nixify() {
  if [ ! -e ./.envrc ]; then
    echo "use nix" > .envrc
    direnv allow
  fi
  if [ ! -e default.nix ]; then
    cat > default.nix <<'EOF'
with import <nixpkgs> {};
stdenv.mkDerivation {
  name = "env";
  buildInputs = [
    bashInteractive
  ];
}
EOF
    ${EDITOR:-vim} default.nix
  fi
}

eval "$(direnv hook bash)"

export PATH="${PATH}:${HOME}/.civiqs/bin:/opt/homebrew/bin:/opt/homebrew/sbin"

export MAMBA_ROOT_PREFIX=/Users/joshua/.mamba
export CONDA_ROOT_PREFIX=/Users/joshua/.mamba
eval "$(${HOME}/.civiqs/bin/micromamba shell hook --shell=zsh)"

if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi

source "${HOME}/.civiqs/etc/bashrc"

[[ -r "/opt/homebrew/etc/profile.d/bash_completion.sh" ]] && . "/opt/homebrew/etc/profile.d/bash_completion.sh"

